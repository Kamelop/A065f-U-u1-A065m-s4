# .github/workflows/build_kernel.yml
name: Android Kernel Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git python3 curl build-essential bc bison flex libssl-dev openjdk-21-jdk wget unzip
          export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
          echo "JAVA_HOME set to $JAVA_HOME"
          # Install repo tool if missing
          if [ ! -f /usr/local/bin/repo ]; then
            curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
            chmod a+x ~/repo
            sudo mv ~/repo /usr/local/bin/
          fi

      # 3. Cache repo directory to speed up future syncs
      - name: Cache repo
        uses: actions/cache@v3
        with:
          path: .repo
          key: repo-cache-${{ runner.os }}-${{ hashFiles('**/kernel_device_modules-6.6/**') }}
          restore-keys: |
            repo-cache-${{ runner.os }}-

      # 4. Initialize and sync repo
      - name: Init & sync repo
        run: |
          if [ ! -d .repo ]; then
            repo init -u https://android.googlesource.com/kernel/manifest -b common-android14-6.1
          fi
          repo sync -j$(nproc)

      # 5. Generate build config with merged environment
      - name: Generate build config
        run: |
          cd kernel
          # Export all required environment variables
          export DEVICE_MODULES_DIR="kernel_device_modules-6.6"
          export BUILD_CONFIG="../out/target/product/a06/obj/KERNEL_OBJ/build.config"
          export OUT_DIR="../out/target/product/a06/obj/KLEAF_OBJ"
          export DIST_DIR="../out/target/product/a06/obj/KLEAF_OBJ/dist"
          export DEFCONFIG_OVERLAYS="mt6768_overlay.config o8.config"
          export PROJECT="mgk_64_k66"
          export MODE="user"

          # Run generator
          python3 kernel_device_modules-6.6/scripts/gen_build_config.py \
            --kernel-defconfig mediatek-bazel_defconfig \
            --kernel-defconfig-overlays "$DEFCONFIG_OVERLAYS" \
            --kernel-build-config-overlays "" \
            -m "$MODE" \
            -o "$BUILD_CONFIG"

      # 6. Build the kernel
      - name: Build kernel
        run: |
          cd kernel
          ./kernel_device_modules-6.6/build.sh

      # 7. Upload kernel Image.gz
      - name: Upload kernel image
        uses: actions/upload-artifact@v4
        with:
          name: kernel-image
          path: out/target/product/a06/obj/KLEAF_OBJ/dist/kernel_device_modules-6.6/mgk_64_k66_kernel_aarch64.user/Image.gz
