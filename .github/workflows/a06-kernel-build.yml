name: A06 Kernel Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git-core gnupg flex bison build-essential zip curl zlib1g-dev \
            gcc-multilib g++-multilib libc6-dev-i386 libncurses5-dev \
            x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev \
            libxml2-utils xsltproc unzip python3 python-is-python3 ccache

      - name: Enable ccache
        run: |
          export PATH="/usr/lib/ccache:$PATH"
          ccache --max-size=10G
          echo "CCACHE_DIR=$GITHUB_WORKSPACE/.ccache" >> $GITHUB_ENV

      - name: repo
        run: |
          # Install latest repo locally
          mkdir -p $GITHUB_WORKSPACE/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > $GITHUB_WORKSPACE/bin/repo
          chmod a+x $GITHUB_WORKSPACE/bin/repo
          export PATH="$GITHUB_WORKSPACE/bin:$PATH"

          # Initialize kernel repo
          mkdir -p kernel_build && cd kernel_build
          repo init -u https://android.googlesource.com/kernel/manifest -b common-android15-6.6
          repo sync -j$(nproc)

      - name: Copy required directories to root
        run: |
          cp -r build/ $GITHUB_WORKSPACE/
          cp -r external/ $GITHUB_WORKSPACE/
          cp -r prebuilts/ $GITHUB_WORKSPACE/
          cp -r tools/ $GITHUB_WORKSPACE/

      - name: Set Build Environment and Export Target Config
        run: |
          # Export environment variables for kernel build
          export DEVICE_MODULES_DIR="kernel_device_modules-6.6"
          export BUILD_CONFIG="../out/target/product/a06/obj/KERNEL_OBJ/build.config"
          export OUT_DIR="../out/target/product/a06/obj/KLEAF_OBJ"
          export DIST_DIR="../out/target/product/a06/obj/KLEAF_OBJ/dist"
          export DEFCONFIG_OVERLAYS="mt6768_overlay.config o8.config"
          export PROJECT="mgk_64_k66"
          
          # Dynamically use GitHub Actions runner name as MODE
          export MODE="${GITHUB_RUNNER_NAME}"

          # Generate build config
          cd kernel
          python $DEVICE_MODULES_DIR/scripts/gen_build_config.py \
            --kernel-defconfig mediatek-bazel_defconfig \
            --kernel-defconfig-overlays "$DEFCONFIG_OVERLAYS" \
            --kernel-build-config-overlays "" \
            -m $MODE \
            -o $BUILD_CONFIG

      - name: Build Kernel
        run: |
          cd kernel
          # Source build config for overrides
          source $BUILD_CONFIG

          # Run the final build script
          ./kernel_device_modules-6.6/build.sh

      - name: Show ccache stats
        run: |
          ccache --show-stats

      - name: Upload Kernel Image
        uses: actions/upload-artifact@v4
        with:
          name: kernel-image
          path: out/arch/arm64/boot/Image.gz-dtb
